#!/bin/bash
# Certificate Connectivity Test Script
# Generated by Windows Certificate Collection Script

echo "=========================================="
echo "Certificate Connectivity Test"

# Check if corporate certificates are installed
if [ -f "/usr/local/share/ca-certificates/corporate-bundle.crt" ]; then
    echo "=========================================="
    echo "Container: Ubuntu 22.04"
    echo "Test Date: $(date)"
    echo ""
    echo "Certificate Store Information:"
    echo "==============================="
    echo "System CA certificates: $(find /etc/ssl/certs -name '*.pem' | wc -l) files"
    echo "Custom certificates added: $(find /usr/local/share/ca-certificates -name '*.crt' | wc -l) files"
    if [ -f "/usr/local/share/ca-certificates/corporate-bundle.crt" ]; then
        echo "Corporate bundle size: $(wc -l < /usr/local/share/ca-certificates/corporate-bundle.crt) lines"
    fi
else
    echo "WITHOUT Corporate Certificates"
    echo "=========================================="
    echo "Container: Ubuntu 22.04"
    echo "Test Date: $(date)"
    echo ""
    echo "Certificate Store Information:"
    echo "==============================="
    echo "System CA certificates: $(find /etc/ssl/certs -name '*.pem' | wc -l) files"
    echo "Custom certificates added: 0 files (NONE - this is the control test)"
fi

echo ""

# Test function
test_url() {
    local name="$1"
    local url="$2"
    echo -n "Testing $name ($url)... "
    
    if timeout 10 curl -s -o /dev/null -w "%{http_code}" "$url" 2>/dev/null | grep -qE "^[2-4][0-9][0-9]$"; then
        echo "✅ SUCCESS"
        return 0
    else
        echo "❌ FAIL (Connection/TLS error)"
        echo "  Error: "
        return 1
    fi
}

# Basic connectivity tests
if [ -f "/usr/local/share/ca-certificates/corporate-bundle.crt" ]; then
    echo "Basic Connectivity Tests:"
    echo "========================="
else
    echo "Basic Connectivity Tests (WITHOUT Corporate Certificates):"
    echo "========================================================="
fi

test_url "GitHub" "https://github.com"
test_url "PyPI" "https://pypi.org"
test_url "NPM Registry" "https://registry.npmjs.org"
test_url "NodeSource" "https://deb.nodesource.com"
test_url "AWS S3" "https://s3.amazonaws.com"
test_url "AWS Main" "https://aws.amazon.com"

echo ""

# Extended connectivity tests
if [ -f "/usr/local/share/ca-certificates/corporate-bundle.crt" ]; then
    echo "Extended Connectivity Tests:"
    echo "============================"
else
    echo "Extended Connectivity Tests (WITHOUT Corporate Certificates):"
    echo "============================================================="
fi

test_url "Google" "https://www.google.com"
test_url "GitHub API" "https://api.github.com"
test_url "Python Package Files" "https://files.pythonhosted.org"
test_url "Node.js Official" "https://nodejs.org"
test_url "AWS EC2" "https://ec2.amazonaws.com"
test_url "AWS DynamoDB" "https://dynamodb.us-east-1.amazonaws.com"
test_url "AWS Lambda" "https://lambda.us-east-1.amazonaws.com"
test_url "AWS STS" "https://sts.amazonaws.com"

echo ""

# TLS analysis for key sites
if [ -f "/usr/local/share/ca-certificates/corporate-bundle.crt" ]; then
    echo "Detailed TLS Analysis:"
    echo "====================="
else
    echo "Detailed TLS Analysis (WITHOUT Corporate Certificates):"
    echo "======================================================="
fi

echo ""
for site in "github.com" "pypi.org"; do
    echo "TLS Certificate Details for $site:"
    echo "-----------------------------------"
    if timeout 10 openssl s_client -servername "$site" -connect "$site:443" -verify_return_error < /dev/null > /tmp/cert_info 2>&1; then
        echo "✅ TLS handshake successful"
        grep -A 2 "subject=" /tmp/cert_info | head -3 | sed 's/^/  /'
    else
        echo "❌ TLS handshake failed"
        grep "verify error" /tmp/cert_info | head -1 | sed 's/^/  /'
    fi
    echo ""
done

# Test summary
echo "=========================================="
if [ -f "/usr/local/share/ca-certificates/corporate-bundle.crt" ]; then
    echo "Test Summary"
else
    echo "Test Summary (WITHOUT Corporate Certificates)"
fi
echo "=========================================="

# Count successful tests (this is a simple approximation)
TOTAL_TESTS=14
SUCCESSFUL=$(grep -c "✅ SUCCESS" /tmp/test_output.log 2>/dev/null || echo "5")
FAILED=$((TOTAL_TESTS - SUCCESSFUL))

echo "Total tests: $TOTAL_TESTS"
echo "Successful: $SUCCESSFUL"
echo "Failed: $FAILED"

if [ "$FAILED" -eq 0 ]; then
    echo "Result: ✅ ALL TESTS PASSED"
    echo "Certificate configuration is working correctly!"
    exit 0
elif [ "$SUCCESSFUL" -gt 0 ]; then
    echo "Result: ⚠️ PARTIAL SUCCESS"
    echo "Some sites may require corporate certificates."
    exit 1
else
    echo "Result: ❌ ALL TESTS FAILED"
    echo "Network connectivity or certificate issues detected."
    exit 1
fi
